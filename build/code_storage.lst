ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"code_storage.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/code_storage.c"
  20              		.section	.text.CodeStorage_EraseSector,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	CodeStorage_EraseSector:
  27              	.LFB142:
   1:Core/Src/code_storage.c **** /* USER CODE BEGIN Header */
   2:Core/Src/code_storage.c **** /**
   3:Core/Src/code_storage.c ****   ******************************************************************************
   4:Core/Src/code_storage.c ****   * @file           : code_storage.c
   5:Core/Src/code_storage.c ****   * @brief          : Flash storage implementation for access codes
   6:Core/Src/code_storage.c ****   ******************************************************************************
   7:Core/Src/code_storage.c ****   * @attention
   8:Core/Src/code_storage.c ****   *
   9:Core/Src/code_storage.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/code_storage.c ****   * All rights reserved.
  11:Core/Src/code_storage.c ****   *
  12:Core/Src/code_storage.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/code_storage.c ****   * in the root directory of this software component.
  14:Core/Src/code_storage.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/code_storage.c ****   *
  16:Core/Src/code_storage.c ****   ******************************************************************************
  17:Core/Src/code_storage.c ****   */
  18:Core/Src/code_storage.c **** /* USER CODE END Header */
  19:Core/Src/code_storage.c **** 
  20:Core/Src/code_storage.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/code_storage.c **** #include "code_storage.h"
  22:Core/Src/code_storage.c **** 
  23:Core/Src/code_storage.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/code_storage.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/code_storage.c **** #include <string.h>
  26:Core/Src/code_storage.c **** /* USER CODE END Includes */
  27:Core/Src/code_storage.c **** 
  28:Core/Src/code_storage.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/code_storage.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/code_storage.c **** 
  31:Core/Src/code_storage.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 2


  32:Core/Src/code_storage.c **** 
  33:Core/Src/code_storage.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/code_storage.c **** /* USER CODE BEGIN PD */
  35:Core/Src/code_storage.c **** 
  36:Core/Src/code_storage.c **** /* USER CODE END PD */
  37:Core/Src/code_storage.c **** 
  38:Core/Src/code_storage.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/code_storage.c **** /* USER CODE BEGIN PM */
  40:Core/Src/code_storage.c **** 
  41:Core/Src/code_storage.c **** /* USER CODE END PM */
  42:Core/Src/code_storage.c **** 
  43:Core/Src/code_storage.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/code_storage.c **** /* USER CODE BEGIN PV */
  45:Core/Src/code_storage.c **** static access_codes_t current_codes;
  46:Core/Src/code_storage.c **** static uint8_t codes_loaded = 0;
  47:Core/Src/code_storage.c **** /* USER CODE END PV */
  48:Core/Src/code_storage.c **** 
  49:Core/Src/code_storage.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/code_storage.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/code_storage.c **** static uint8_t CodeStorage_EraseSector(void);
  52:Core/Src/code_storage.c **** static uint8_t CodeStorage_ProgramFlash(access_codes_t* codes);
  53:Core/Src/code_storage.c **** /* USER CODE END PFP */
  54:Core/Src/code_storage.c **** 
  55:Core/Src/code_storage.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/code_storage.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/code_storage.c **** 
  58:Core/Src/code_storage.c **** /* USER CODE END 0 */
  59:Core/Src/code_storage.c **** 
  60:Core/Src/code_storage.c **** /**
  61:Core/Src/code_storage.c ****   * @brief  Initialize code storage system
  62:Core/Src/code_storage.c ****   * @retval None
  63:Core/Src/code_storage.c ****   */
  64:Core/Src/code_storage.c **** void CodeStorage_Init(void)
  65:Core/Src/code_storage.c **** {
  66:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_Init */
  67:Core/Src/code_storage.c ****     // Initialize current codes structure
  68:Core/Src/code_storage.c ****     memset(&current_codes, 0, sizeof(access_codes_t));
  69:Core/Src/code_storage.c ****     codes_loaded = 0;
  70:Core/Src/code_storage.c ****     
  71:Core/Src/code_storage.c ****     // Try to read codes from flash
  72:Core/Src/code_storage.c ****     if (CodeStorage_ReadCodes(&current_codes) == 0)
  73:Core/Src/code_storage.c ****     {
  74:Core/Src/code_storage.c ****         codes_loaded = 1;
  75:Core/Src/code_storage.c ****     }
  76:Core/Src/code_storage.c ****     else
  77:Core/Src/code_storage.c ****     {
  78:Core/Src/code_storage.c ****         // Flash is empty or corrupted, initialize with empty codes
  79:Core/Src/code_storage.c ****         current_codes.magic_number = MAGIC_NUMBER;
  80:Core/Src/code_storage.c ****         codes_loaded = 1;
  81:Core/Src/code_storage.c ****     }
  82:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_Init */
  83:Core/Src/code_storage.c **** }
  84:Core/Src/code_storage.c **** 
  85:Core/Src/code_storage.c **** /**
  86:Core/Src/code_storage.c ****   * @brief  Read access codes from flash memory
  87:Core/Src/code_storage.c ****   * @param  codes: Pointer to structure to store codes
  88:Core/Src/code_storage.c ****   * @retval 0 if successful, 1 if error
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 3


  89:Core/Src/code_storage.c ****   */
  90:Core/Src/code_storage.c **** uint8_t CodeStorage_ReadCodes(access_codes_t* codes)
  91:Core/Src/code_storage.c **** {
  92:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_ReadCodes */
  93:Core/Src/code_storage.c ****     if (codes == NULL)
  94:Core/Src/code_storage.c ****         return 1;
  95:Core/Src/code_storage.c ****     
  96:Core/Src/code_storage.c ****     // Read data from flash
  97:Core/Src/code_storage.c ****     memcpy(codes, (void*)FLASH_DATA_ADDRESS, sizeof(access_codes_t));
  98:Core/Src/code_storage.c ****     
  99:Core/Src/code_storage.c ****     // Validate the data
 100:Core/Src/code_storage.c ****     if (!CodeStorage_ValidateFlashData(codes))
 101:Core/Src/code_storage.c ****     {
 102:Core/Src/code_storage.c ****         return 1; // Invalid data
 103:Core/Src/code_storage.c ****     }
 104:Core/Src/code_storage.c ****     
 105:Core/Src/code_storage.c ****     return 0; // Success
 106:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_ReadCodes */
 107:Core/Src/code_storage.c **** }
 108:Core/Src/code_storage.c **** 
 109:Core/Src/code_storage.c **** /**
 110:Core/Src/code_storage.c ****   * @brief  Write access codes to flash memory
 111:Core/Src/code_storage.c ****   * @param  codes: Pointer to structure containing codes to write
 112:Core/Src/code_storage.c ****   * @retval 0 if successful, 1 if error
 113:Core/Src/code_storage.c ****   */
 114:Core/Src/code_storage.c **** uint8_t CodeStorage_WriteCodes(access_codes_t* codes)
 115:Core/Src/code_storage.c **** {
 116:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_WriteCodes */
 117:Core/Src/code_storage.c ****     if (codes == NULL)
 118:Core/Src/code_storage.c ****         return 1;
 119:Core/Src/code_storage.c ****     
 120:Core/Src/code_storage.c ****     // Validate the data before writing
 121:Core/Src/code_storage.c ****     if (!CodeStorage_ValidateFlashData(codes))
 122:Core/Src/code_storage.c ****     {
 123:Core/Src/code_storage.c ****         return 1; // Invalid data
 124:Core/Src/code_storage.c ****     }
 125:Core/Src/code_storage.c ****     
 126:Core/Src/code_storage.c ****     // Erase the sector first
 127:Core/Src/code_storage.c ****     if (CodeStorage_EraseSector() != 0)
 128:Core/Src/code_storage.c ****     {
 129:Core/Src/code_storage.c ****         return 1; // Erase failed
 130:Core/Src/code_storage.c ****     }
 131:Core/Src/code_storage.c ****     
 132:Core/Src/code_storage.c ****     // Program the flash
 133:Core/Src/code_storage.c ****     if (CodeStorage_ProgramFlash(codes) != 0)
 134:Core/Src/code_storage.c ****     {
 135:Core/Src/code_storage.c ****         return 1; // Program failed
 136:Core/Src/code_storage.c ****     }
 137:Core/Src/code_storage.c ****     
 138:Core/Src/code_storage.c ****     // Update current codes in RAM
 139:Core/Src/code_storage.c ****     memcpy(&current_codes, codes, sizeof(access_codes_t));
 140:Core/Src/code_storage.c ****     
 141:Core/Src/code_storage.c ****     return 0; // Success
 142:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_WriteCodes */
 143:Core/Src/code_storage.c **** }
 144:Core/Src/code_storage.c **** 
 145:Core/Src/code_storage.c **** /**
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 4


 146:Core/Src/code_storage.c ****   * @brief  Get a specific access code
 147:Core/Src/code_storage.c ****   * @param  codeIndex: Index of code to retrieve (0, 1, or 2)
 148:Core/Src/code_storage.c ****   * @param  codeBuffer: Buffer to store the code
 149:Core/Src/code_storage.c ****   * @retval 0 if successful, 1 if error
 150:Core/Src/code_storage.c ****   */
 151:Core/Src/code_storage.c **** uint8_t CodeStorage_GetCode(uint8_t codeIndex, char* codeBuffer)
 152:Core/Src/code_storage.c **** {
 153:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_GetCode */
 154:Core/Src/code_storage.c ****     if (codeIndex >= 3 || codeBuffer == NULL)
 155:Core/Src/code_storage.c ****         return 1;
 156:Core/Src/code_storage.c ****     
 157:Core/Src/code_storage.c ****     if (!codes_loaded)
 158:Core/Src/code_storage.c ****         return 1;
 159:Core/Src/code_storage.c ****     
 160:Core/Src/code_storage.c ****     // Copy the requested code
 161:Core/Src/code_storage.c ****     strncpy(codeBuffer, current_codes.code1 + (codeIndex * 32), MAX_CODE_LENGTH - 1);
 162:Core/Src/code_storage.c ****     codeBuffer[MAX_CODE_LENGTH - 1] = '\0'; // Ensure null termination
 163:Core/Src/code_storage.c ****     
 164:Core/Src/code_storage.c ****     return 0; // Success
 165:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_GetCode */
 166:Core/Src/code_storage.c **** }
 167:Core/Src/code_storage.c **** 
 168:Core/Src/code_storage.c **** /**
 169:Core/Src/code_storage.c ****   * @brief  Set a specific access code
 170:Core/Src/code_storage.c ****   * @param  codeIndex: Index of code to set (0, 1, or 2)
 171:Core/Src/code_storage.c ****   * @param  newCode: New code value
 172:Core/Src/code_storage.c ****   * @retval 0 if successful, 1 if error
 173:Core/Src/code_storage.c ****   */
 174:Core/Src/code_storage.c **** uint8_t CodeStorage_SetCode(uint8_t codeIndex, char* newCode)
 175:Core/Src/code_storage.c **** {
 176:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_SetCode */
 177:Core/Src/code_storage.c ****     if (codeIndex >= 3 || newCode == NULL)
 178:Core/Src/code_storage.c ****         return 1;
 179:Core/Src/code_storage.c ****     
 180:Core/Src/code_storage.c ****     if (!codes_loaded)
 181:Core/Src/code_storage.c ****         return 1;
 182:Core/Src/code_storage.c ****     
 183:Core/Src/code_storage.c ****     // Validate code length
 184:Core/Src/code_storage.c ****     if (strlen(newCode) >= MAX_CODE_LENGTH)
 185:Core/Src/code_storage.c ****         return 1;
 186:Core/Src/code_storage.c ****     
 187:Core/Src/code_storage.c ****     // Update the code in RAM
 188:Core/Src/code_storage.c ****     strncpy(current_codes.code1 + (codeIndex * 32), newCode, MAX_CODE_LENGTH - 1);
 189:Core/Src/code_storage.c ****     current_codes.code1[codeIndex * 32 + MAX_CODE_LENGTH - 1] = '\0';
 190:Core/Src/code_storage.c ****     
 191:Core/Src/code_storage.c ****     // Write to flash
 192:Core/Src/code_storage.c ****     if (CodeStorage_WriteCodes(&current_codes) != 0)
 193:Core/Src/code_storage.c ****     {
 194:Core/Src/code_storage.c ****         return 1; // Flash write failed
 195:Core/Src/code_storage.c ****     }
 196:Core/Src/code_storage.c ****     
 197:Core/Src/code_storage.c ****     return 0; // Success
 198:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_SetCode */
 199:Core/Src/code_storage.c **** }
 200:Core/Src/code_storage.c **** 
 201:Core/Src/code_storage.c **** /**
 202:Core/Src/code_storage.c ****   * @brief  Check if a specific code is set
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 5


 203:Core/Src/code_storage.c ****   * @param  codeIndex: Index of code to check (0, 1, or 2)
 204:Core/Src/code_storage.c ****   * @retval 1 if code is set, 0 if not set
 205:Core/Src/code_storage.c ****   */
 206:Core/Src/code_storage.c **** uint8_t CodeStorage_IsCodeSet(uint8_t codeIndex)
 207:Core/Src/code_storage.c **** {
 208:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_IsCodeSet */
 209:Core/Src/code_storage.c ****     if (codeIndex >= 3 || !codes_loaded)
 210:Core/Src/code_storage.c ****         return 0;
 211:Core/Src/code_storage.c ****     
 212:Core/Src/code_storage.c ****     char* code_ptr = current_codes.code1 + (codeIndex * 32);
 213:Core/Src/code_storage.c ****     return (strlen(code_ptr) > 0) ? 1 : 0;
 214:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_IsCodeSet */
 215:Core/Src/code_storage.c **** }
 216:Core/Src/code_storage.c **** 
 217:Core/Src/code_storage.c **** /**
 218:Core/Src/code_storage.c ****   * @brief  Clear all access codes
 219:Core/Src/code_storage.c ****   * @retval None
 220:Core/Src/code_storage.c ****   */
 221:Core/Src/code_storage.c **** void CodeStorage_ClearAllCodes(void)
 222:Core/Src/code_storage.c **** {
 223:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_ClearAllCodes */
 224:Core/Src/code_storage.c ****     // Clear all codes in RAM
 225:Core/Src/code_storage.c ****     memset(&current_codes, 0, sizeof(access_codes_t));
 226:Core/Src/code_storage.c ****     current_codes.magic_number = MAGIC_NUMBER;
 227:Core/Src/code_storage.c ****     
 228:Core/Src/code_storage.c ****     // Write to flash
 229:Core/Src/code_storage.c ****     CodeStorage_WriteCodes(&current_codes);
 230:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_ClearAllCodes */
 231:Core/Src/code_storage.c **** }
 232:Core/Src/code_storage.c **** 
 233:Core/Src/code_storage.c **** /**
 234:Core/Src/code_storage.c ****   * @brief  Validate flash data integrity
 235:Core/Src/code_storage.c ****   * @param  codes: Pointer to codes structure to validate
 236:Core/Src/code_storage.c ****   * @retval 1 if valid, 0 if invalid
 237:Core/Src/code_storage.c ****   */
 238:Core/Src/code_storage.c **** uint8_t CodeStorage_ValidateFlashData(access_codes_t* codes)
 239:Core/Src/code_storage.c **** {
 240:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_ValidateFlashData */
 241:Core/Src/code_storage.c ****     if (codes == NULL)
 242:Core/Src/code_storage.c ****         return 0;
 243:Core/Src/code_storage.c ****     
 244:Core/Src/code_storage.c ****     // Check magic number
 245:Core/Src/code_storage.c ****     if (codes->magic_number != MAGIC_NUMBER)
 246:Core/Src/code_storage.c ****         return 0;
 247:Core/Src/code_storage.c ****     
 248:Core/Src/code_storage.c ****     // Validate code lengths
 249:Core/Src/code_storage.c ****     for (int i = 0; i < 3; i++)
 250:Core/Src/code_storage.c ****     {
 251:Core/Src/code_storage.c ****         char* code_ptr = codes->code1 + (i * 32);
 252:Core/Src/code_storage.c ****         if (strlen(code_ptr) >= MAX_CODE_LENGTH)
 253:Core/Src/code_storage.c ****             return 0;
 254:Core/Src/code_storage.c ****     }
 255:Core/Src/code_storage.c ****     
 256:Core/Src/code_storage.c ****     return 1; // Valid
 257:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_ValidateFlashData */
 258:Core/Src/code_storage.c **** }
 259:Core/Src/code_storage.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 6


 260:Core/Src/code_storage.c **** /* USER CODE BEGIN 4 */
 261:Core/Src/code_storage.c **** /**
 262:Core/Src/code_storage.c ****   * @brief  Erase flash sector for data storage
 263:Core/Src/code_storage.c ****   * @retval 0 if successful, 1 if error
 264:Core/Src/code_storage.c ****   */
 265:Core/Src/code_storage.c **** static uint8_t CodeStorage_EraseSector(void)
 266:Core/Src/code_storage.c **** {
  28              		.loc 1 266 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 86B0     		sub	sp, sp, #24
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
 267:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_EraseSector */
 268:Core/Src/code_storage.c ****     FLASH_EraseInitTypeDef EraseInitStruct;
  40              		.loc 1 268 5 view .LVU1
 269:Core/Src/code_storage.c ****     uint32_t SectorError = 0;
  41              		.loc 1 269 5 view .LVU2
  42              		.loc 1 269 14 is_stmt 0 view .LVU3
  43 0004 0024     		movs	r4, #0
  44 0006 0094     		str	r4, [sp]
 270:Core/Src/code_storage.c ****     
 271:Core/Src/code_storage.c ****     // Unlock the Flash
 272:Core/Src/code_storage.c ****     HAL_FLASH_Unlock();
  45              		.loc 1 272 5 is_stmt 1 view .LVU4
  46 0008 FFF7FEFF 		bl	HAL_FLASH_Unlock
  47              	.LVL0:
 273:Core/Src/code_storage.c ****     
 274:Core/Src/code_storage.c ****     // Clear any pending flags
 275:Core/Src/code_storage.c ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP | FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAER
  48              		.loc 1 275 5 view .LVU5
  49 000c 0C4B     		ldr	r3, .L6
  50 000e B322     		movs	r2, #179
  51 0010 DA60     		str	r2, [r3, #12]
 276:Core/Src/code_storage.c ****     
 277:Core/Src/code_storage.c ****     // Configure erase operation
 278:Core/Src/code_storage.c ****     EraseInitStruct.TypeErase = FLASH_TYPEERASE_SECTORS;
  52              		.loc 1 278 5 view .LVU6
  53              		.loc 1 278 31 is_stmt 0 view .LVU7
  54 0012 0194     		str	r4, [sp, #4]
 279:Core/Src/code_storage.c ****     EraseInitStruct.Sector = FLASH_DATA_SECTOR;
  55              		.loc 1 279 5 is_stmt 1 view .LVU8
  56              		.loc 1 279 28 is_stmt 0 view .LVU9
  57 0014 0723     		movs	r3, #7
  58 0016 0393     		str	r3, [sp, #12]
 280:Core/Src/code_storage.c ****     EraseInitStruct.NbSectors = 1;
  59              		.loc 1 280 5 is_stmt 1 view .LVU10
  60              		.loc 1 280 31 is_stmt 0 view .LVU11
  61 0018 0123     		movs	r3, #1
  62 001a 0493     		str	r3, [sp, #16]
 281:Core/Src/code_storage.c ****     EraseInitStruct.VoltageRange = FLASH_VOLTAGE_RANGE_3;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 7


  63              		.loc 1 281 5 is_stmt 1 view .LVU12
  64              		.loc 1 281 34 is_stmt 0 view .LVU13
  65 001c 0223     		movs	r3, #2
  66 001e 0593     		str	r3, [sp, #20]
 282:Core/Src/code_storage.c ****     
 283:Core/Src/code_storage.c ****     // Perform erase
 284:Core/Src/code_storage.c ****     if (HAL_FLASHEx_Erase(&EraseInitStruct, &SectorError) != HAL_OK)
  67              		.loc 1 284 5 is_stmt 1 view .LVU14
  68              		.loc 1 284 9 is_stmt 0 view .LVU15
  69 0020 6946     		mov	r1, sp
  70 0022 01A8     		add	r0, sp, #4
  71 0024 FFF7FEFF 		bl	HAL_FLASHEx_Erase
  72              	.LVL1:
  73              		.loc 1 284 8 discriminator 1 view .LVU16
  74 0028 28B9     		cbnz	r0, .L5
  75 002a 0446     		mov	r4, r0
 285:Core/Src/code_storage.c ****     {
 286:Core/Src/code_storage.c ****         HAL_FLASH_Lock();
 287:Core/Src/code_storage.c ****         return 1; // Erase failed
 288:Core/Src/code_storage.c ****     }
 289:Core/Src/code_storage.c ****     
 290:Core/Src/code_storage.c ****     HAL_FLASH_Lock();
  76              		.loc 1 290 5 is_stmt 1 view .LVU17
  77 002c FFF7FEFF 		bl	HAL_FLASH_Lock
  78              	.LVL2:
 291:Core/Src/code_storage.c ****     return 0; // Success
  79              		.loc 1 291 5 view .LVU18
  80              	.L3:
 292:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_EraseSector */
 293:Core/Src/code_storage.c **** }
  81              		.loc 1 293 1 is_stmt 0 view .LVU19
  82 0030 2046     		mov	r0, r4
  83 0032 06B0     		add	sp, sp, #24
  84              	.LCFI2:
  85              		.cfi_remember_state
  86              		.cfi_def_cfa_offset 8
  87              		@ sp needed
  88 0034 10BD     		pop	{r4, pc}
  89              	.L5:
  90              	.LCFI3:
  91              		.cfi_restore_state
 286:Core/Src/code_storage.c ****         return 1; // Erase failed
  92              		.loc 1 286 9 is_stmt 1 view .LVU20
  93 0036 FFF7FEFF 		bl	HAL_FLASH_Lock
  94              	.LVL3:
 287:Core/Src/code_storage.c ****     }
  95              		.loc 1 287 9 view .LVU21
 287:Core/Src/code_storage.c ****     }
  96              		.loc 1 287 16 is_stmt 0 view .LVU22
  97 003a 0124     		movs	r4, #1
  98 003c F8E7     		b	.L3
  99              	.L7:
 100 003e 00BF     		.align	2
 101              	.L6:
 102 0040 003C0240 		.word	1073888256
 103              		.cfi_endproc
 104              	.LFE142:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 8


 106              		.section	.text.CodeStorage_ProgramFlash,"ax",%progbits
 107              		.align	1
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 112              	CodeStorage_ProgramFlash:
 113              	.LVL4:
 114              	.LFB143:
 294:Core/Src/code_storage.c **** 
 295:Core/Src/code_storage.c **** /**
 296:Core/Src/code_storage.c ****   * @brief  Program flash memory with codes data
 297:Core/Src/code_storage.c ****   * @param  codes: Pointer to codes structure to program
 298:Core/Src/code_storage.c ****   * @retval 0 if successful, 1 if error
 299:Core/Src/code_storage.c ****   */
 300:Core/Src/code_storage.c **** static uint8_t CodeStorage_ProgramFlash(access_codes_t* codes)
 301:Core/Src/code_storage.c **** {
 115              		.loc 1 301 1 is_stmt 1 view -0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		.loc 1 301 1 is_stmt 0 view .LVU24
 120 0000 38B5     		push	{r3, r4, r5, lr}
 121              	.LCFI4:
 122              		.cfi_def_cfa_offset 16
 123              		.cfi_offset 3, -16
 124              		.cfi_offset 4, -12
 125              		.cfi_offset 5, -8
 126              		.cfi_offset 14, -4
 127 0002 0546     		mov	r5, r0
 302:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_ProgramFlash */
 303:Core/Src/code_storage.c ****     uint32_t* data_ptr = (uint32_t*)codes;
 128              		.loc 1 303 5 is_stmt 1 view .LVU25
 129              	.LVL5:
 304:Core/Src/code_storage.c ****     uint32_t data_size = sizeof(access_codes_t);
 130              		.loc 1 304 5 view .LVU26
 305:Core/Src/code_storage.c ****     uint32_t words_to_write = (data_size + 3) / 4; // Round up to word boundary
 131              		.loc 1 305 5 view .LVU27
 306:Core/Src/code_storage.c ****     
 307:Core/Src/code_storage.c ****     // Unlock the Flash
 308:Core/Src/code_storage.c ****     HAL_FLASH_Unlock();
 132              		.loc 1 308 5 view .LVU28
 133 0004 FFF7FEFF 		bl	HAL_FLASH_Unlock
 134              	.LVL6:
 309:Core/Src/code_storage.c ****     
 310:Core/Src/code_storage.c ****     // Program the data word by word
 311:Core/Src/code_storage.c ****     for (uint32_t i = 0; i < words_to_write; i++)
 135              		.loc 1 311 5 view .LVU29
 136              	.LBB2:
 137              		.loc 1 311 10 view .LVU30
 138              		.loc 1 311 19 is_stmt 0 view .LVU31
 139 0008 0024     		movs	r4, #0
 140              	.LVL7:
 141              	.L9:
 142              		.loc 1 311 28 is_stmt 1 discriminator 1 view .LVU32
 143 000a 182C     		cmp	r4, #24
 144 000c 11D8     		bhi	.L14
 312:Core/Src/code_storage.c ****     {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 9


 313:Core/Src/code_storage.c ****         if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, FLASH_DATA_ADDRESS + (i * 4), data_ptr[i]) !=
 145              		.loc 1 313 9 view .LVU33
 146              		.loc 1 313 74 is_stmt 0 view .LVU34
 147 000e 04F10071 		add	r1, r4, #33554432
 148 0012 01F5C031 		add	r1, r1, #98304
 149              		.loc 1 313 13 view .LVU35
 150 0016 55F82420 		ldr	r2, [r5, r4, lsl #2]
 151 001a 0023     		movs	r3, #0
 152 001c 8900     		lsls	r1, r1, #2
 153 001e 0220     		movs	r0, #2
 154 0020 FFF7FEFF 		bl	HAL_FLASH_Program
 155              	.LVL8:
 156              		.loc 1 313 12 discriminator 1 view .LVU36
 157 0024 08B9     		cbnz	r0, .L15
 311:Core/Src/code_storage.c ****     {
 158              		.loc 1 311 47 is_stmt 1 discriminator 2 view .LVU37
 159 0026 0134     		adds	r4, r4, #1
 160              	.LVL9:
 311:Core/Src/code_storage.c ****     {
 161              		.loc 1 311 47 is_stmt 0 discriminator 2 view .LVU38
 162 0028 EFE7     		b	.L9
 163              	.L15:
 314:Core/Src/code_storage.c ****         {
 315:Core/Src/code_storage.c ****             HAL_FLASH_Lock();
 164              		.loc 1 315 13 is_stmt 1 view .LVU39
 165 002a FFF7FEFF 		bl	HAL_FLASH_Lock
 166              	.LVL10:
 316:Core/Src/code_storage.c ****             return 1; // Program failed
 167              		.loc 1 316 13 view .LVU40
 168              		.loc 1 316 20 is_stmt 0 view .LVU41
 169 002e 0120     		movs	r0, #1
 170              	.L11:
 171              		.loc 1 316 20 view .LVU42
 172              	.LBE2:
 317:Core/Src/code_storage.c ****         }
 318:Core/Src/code_storage.c ****     }
 319:Core/Src/code_storage.c ****     
 320:Core/Src/code_storage.c ****     HAL_FLASH_Lock();
 321:Core/Src/code_storage.c ****     return 0; // Success
 322:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_ProgramFlash */
 323:Core/Src/code_storage.c **** }
 173              		.loc 1 323 1 view .LVU43
 174 0030 38BD     		pop	{r3, r4, r5, pc}
 175              	.LVL11:
 176              	.L14:
 320:Core/Src/code_storage.c ****     return 0; // Success
 177              		.loc 1 320 5 is_stmt 1 view .LVU44
 178 0032 FFF7FEFF 		bl	HAL_FLASH_Lock
 179              	.LVL12:
 321:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_ProgramFlash */
 180              		.loc 1 321 5 view .LVU45
 321:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_ProgramFlash */
 181              		.loc 1 321 12 is_stmt 0 view .LVU46
 182 0036 0020     		movs	r0, #0
 183 0038 FAE7     		b	.L11
 184              		.cfi_endproc
 185              	.LFE143:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 10


 187              		.section	.text.CodeStorage_GetCode,"ax",%progbits
 188              		.align	1
 189              		.global	CodeStorage_GetCode
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 194              	CodeStorage_GetCode:
 195              	.LVL13:
 196              	.LFB137:
 152:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_GetCode */
 197              		.loc 1 152 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 154:Core/Src/code_storage.c ****         return 1;
 201              		.loc 1 154 5 view .LVU48
 154:Core/Src/code_storage.c ****         return 1;
 202              		.loc 1 154 8 is_stmt 0 view .LVU49
 203 0000 0228     		cmp	r0, #2
 204 0002 11D8     		bhi	.L18
 152:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_GetCode */
 205              		.loc 1 152 1 view .LVU50
 206 0004 10B5     		push	{r4, lr}
 207              	.LCFI5:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 4, -8
 210              		.cfi_offset 14, -4
 211 0006 0C46     		mov	r4, r1
 154:Core/Src/code_storage.c ****         return 1;
 212              		.loc 1 154 24 discriminator 1 view .LVU51
 213 0008 81B1     		cbz	r1, .L19
 157:Core/Src/code_storage.c ****         return 1;
 214              		.loc 1 157 5 is_stmt 1 view .LVU52
 157:Core/Src/code_storage.c ****         return 1;
 215              		.loc 1 157 9 is_stmt 0 view .LVU53
 216 000a 094B     		ldr	r3, .L26
 217 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 157:Core/Src/code_storage.c ****         return 1;
 218              		.loc 1 157 8 view .LVU54
 219 000e 0BB9     		cbnz	r3, .L25
 158:Core/Src/code_storage.c ****     
 220              		.loc 1 158 16 view .LVU55
 221 0010 0120     		movs	r0, #1
 222              	.LVL14:
 223              	.L17:
 166:Core/Src/code_storage.c **** 
 224              		.loc 1 166 1 view .LVU56
 225 0012 10BD     		pop	{r4, pc}
 226              	.LVL15:
 227              	.L25:
 161:Core/Src/code_storage.c ****     codeBuffer[MAX_CODE_LENGTH - 1] = '\0'; // Ensure null termination
 228              		.loc 1 161 5 is_stmt 1 view .LVU57
 229 0014 1F22     		movs	r2, #31
 230 0016 0749     		ldr	r1, .L26+4
 231              	.LVL16:
 161:Core/Src/code_storage.c ****     codeBuffer[MAX_CODE_LENGTH - 1] = '\0'; // Ensure null termination
 232              		.loc 1 161 5 is_stmt 0 view .LVU58
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 11


 233 0018 01EB4011 		add	r1, r1, r0, lsl #5
 234 001c 2046     		mov	r0, r4
 235              	.LVL17:
 161:Core/Src/code_storage.c ****     codeBuffer[MAX_CODE_LENGTH - 1] = '\0'; // Ensure null termination
 236              		.loc 1 161 5 view .LVU59
 237 001e FFF7FEFF 		bl	strncpy
 238              	.LVL18:
 162:Core/Src/code_storage.c ****     
 239              		.loc 1 162 5 is_stmt 1 view .LVU60
 162:Core/Src/code_storage.c ****     
 240              		.loc 1 162 37 is_stmt 0 view .LVU61
 241 0022 0020     		movs	r0, #0
 242 0024 E077     		strb	r0, [r4, #31]
 164:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_GetCode */
 243              		.loc 1 164 5 is_stmt 1 view .LVU62
 164:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_GetCode */
 244              		.loc 1 164 12 is_stmt 0 view .LVU63
 245 0026 F4E7     		b	.L17
 246              	.LVL19:
 247              	.L18:
 248              	.LCFI6:
 249              		.cfi_def_cfa_offset 0
 250              		.cfi_restore 4
 251              		.cfi_restore 14
 155:Core/Src/code_storage.c ****     
 252              		.loc 1 155 16 view .LVU64
 253 0028 0120     		movs	r0, #1
 254              	.LVL20:
 166:Core/Src/code_storage.c **** 
 255              		.loc 1 166 1 view .LVU65
 256 002a 7047     		bx	lr
 257              	.LVL21:
 258              	.L19:
 259              	.LCFI7:
 260              		.cfi_def_cfa_offset 8
 261              		.cfi_offset 4, -8
 262              		.cfi_offset 14, -4
 155:Core/Src/code_storage.c ****     
 263              		.loc 1 155 16 view .LVU66
 264 002c 0120     		movs	r0, #1
 265              	.LVL22:
 155:Core/Src/code_storage.c ****     
 266              		.loc 1 155 16 view .LVU67
 267 002e F0E7     		b	.L17
 268              	.L27:
 269              		.align	2
 270              	.L26:
 271 0030 00000000 		.word	codes_loaded
 272 0034 00000000 		.word	current_codes
 273              		.cfi_endproc
 274              	.LFE137:
 276              		.section	.text.CodeStorage_IsCodeSet,"ax",%progbits
 277              		.align	1
 278              		.global	CodeStorage_IsCodeSet
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 12


 283              	CodeStorage_IsCodeSet:
 284              	.LVL23:
 285              	.LFB139:
 207:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_IsCodeSet */
 286              		.loc 1 207 1 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 207:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_IsCodeSet */
 291              		.loc 1 207 1 is_stmt 0 view .LVU69
 292 0000 0346     		mov	r3, r0
 209:Core/Src/code_storage.c ****         return 0;
 293              		.loc 1 209 5 is_stmt 1 view .LVU70
 209:Core/Src/code_storage.c ****         return 0;
 294              		.loc 1 209 8 is_stmt 0 view .LVU71
 295 0002 0228     		cmp	r0, #2
 296 0004 09D8     		bhi	.L30
 209:Core/Src/code_storage.c ****         return 0;
 297              		.loc 1 209 27 discriminator 1 view .LVU72
 298 0006 064A     		ldr	r2, .L31
 299 0008 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 300              	.LVL24:
 209:Core/Src/code_storage.c ****         return 0;
 301              		.loc 1 209 24 discriminator 1 view .LVU73
 302 000a 38B1     		cbz	r0, .L29
 212:Core/Src/code_storage.c ****     return (strlen(code_ptr) > 0) ? 1 : 0;
 303              		.loc 1 212 5 is_stmt 1 view .LVU74
 212:Core/Src/code_storage.c ****     return (strlen(code_ptr) > 0) ? 1 : 0;
 304              		.loc 1 212 55 is_stmt 0 view .LVU75
 305 000c 5B01     		lsls	r3, r3, #5
 306              	.LVL25:
 212:Core/Src/code_storage.c ****     return (strlen(code_ptr) > 0) ? 1 : 0;
 307              		.loc 1 212 11 view .LVU76
 308 000e 054A     		ldr	r2, .L31+4
 309              	.LVL26:
 213:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_IsCodeSet */
 310              		.loc 1 213 5 is_stmt 1 view .LVU77
 213:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_IsCodeSet */
 311              		.loc 1 213 30 is_stmt 0 view .LVU78
 312 0010 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 213:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_IsCodeSet */
 313              		.loc 1 213 39 view .LVU79
 314 0012 0038     		subs	r0, r0, #0
 315 0014 18BF     		it	ne
 316 0016 0120     		movne	r0, #1
 317 0018 7047     		bx	lr
 318              	.LVL27:
 319              	.L30:
 210:Core/Src/code_storage.c ****     
 320              		.loc 1 210 16 view .LVU80
 321 001a 0020     		movs	r0, #0
 322              	.LVL28:
 323              	.L29:
 215:Core/Src/code_storage.c **** 
 324              		.loc 1 215 1 view .LVU81
 325 001c 7047     		bx	lr
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 13


 326              	.L32:
 327 001e 00BF     		.align	2
 328              	.L31:
 329 0020 00000000 		.word	codes_loaded
 330 0024 00000000 		.word	current_codes
 331              		.cfi_endproc
 332              	.LFE139:
 334              		.section	.text.CodeStorage_ValidateFlashData,"ax",%progbits
 335              		.align	1
 336              		.global	CodeStorage_ValidateFlashData
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 341              	CodeStorage_ValidateFlashData:
 342              	.LVL29:
 343              	.LFB141:
 239:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_ValidateFlashData */
 344              		.loc 1 239 1 is_stmt 1 view -0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 241:Core/Src/code_storage.c ****         return 0;
 348              		.loc 1 241 5 view .LVU83
 241:Core/Src/code_storage.c ****         return 0;
 349              		.loc 1 241 8 is_stmt 0 view .LVU84
 350 0000 90B1     		cbz	r0, .L37
 239:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_ValidateFlashData */
 351              		.loc 1 239 1 view .LVU85
 352 0002 38B5     		push	{r3, r4, r5, lr}
 353              	.LCFI8:
 354              		.cfi_def_cfa_offset 16
 355              		.cfi_offset 3, -16
 356              		.cfi_offset 4, -12
 357              		.cfi_offset 5, -8
 358              		.cfi_offset 14, -4
 359 0004 0546     		mov	r5, r0
 245:Core/Src/code_storage.c ****         return 0;
 360              		.loc 1 245 5 is_stmt 1 view .LVU86
 245:Core/Src/code_storage.c ****         return 0;
 361              		.loc 1 245 14 is_stmt 0 view .LVU87
 362 0006 026E     		ldr	r2, [r0, #96]
 245:Core/Src/code_storage.c ****         return 0;
 363              		.loc 1 245 8 view .LVU88
 364 0008 0A4B     		ldr	r3, .L45
 365 000a 9A42     		cmp	r2, r3
 366 000c 0ED1     		bne	.L38
 367              	.LBB3:
 249:Core/Src/code_storage.c ****     {
 368              		.loc 1 249 14 view .LVU89
 369 000e 0024     		movs	r4, #0
 370              	.LVL30:
 371              	.L35:
 249:Core/Src/code_storage.c ****     {
 372              		.loc 1 249 23 is_stmt 1 discriminator 1 view .LVU90
 373 0010 022C     		cmp	r4, #2
 374 0012 07DC     		bgt	.L44
 375              	.LBB4:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 14


 251:Core/Src/code_storage.c ****         if (strlen(code_ptr) >= MAX_CODE_LENGTH)
 376              		.loc 1 251 9 view .LVU91
 377              	.LVL31:
 252:Core/Src/code_storage.c ****             return 0;
 378              		.loc 1 252 9 view .LVU92
 252:Core/Src/code_storage.c ****             return 0;
 379              		.loc 1 252 13 is_stmt 0 view .LVU93
 380 0014 05EB4410 		add	r0, r5, r4, lsl #5
 381              	.LVL32:
 252:Core/Src/code_storage.c ****             return 0;
 382              		.loc 1 252 13 view .LVU94
 383 0018 FFF7FEFF 		bl	strlen
 384              	.LVL33:
 252:Core/Src/code_storage.c ****             return 0;
 385              		.loc 1 252 12 discriminator 1 view .LVU95
 386 001c 1F28     		cmp	r0, #31
 387 001e 07D8     		bhi	.L39
 388              	.LBE4:
 249:Core/Src/code_storage.c ****     {
 389              		.loc 1 249 29 is_stmt 1 discriminator 2 view .LVU96
 390 0020 0134     		adds	r4, r4, #1
 391              	.LVL34:
 249:Core/Src/code_storage.c ****     {
 392              		.loc 1 249 29 is_stmt 0 discriminator 2 view .LVU97
 393 0022 F5E7     		b	.L35
 394              	.LVL35:
 395              	.L44:
 249:Core/Src/code_storage.c ****     {
 396              		.loc 1 249 29 discriminator 2 view .LVU98
 397              	.LBE3:
 256:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_ValidateFlashData */
 398              		.loc 1 256 12 view .LVU99
 399 0024 0120     		movs	r0, #1
 400              	.LBB6:
 401 0026 02E0     		b	.L34
 402              	.LVL36:
 403              	.L37:
 404              	.LCFI9:
 405              		.cfi_def_cfa_offset 0
 406              		.cfi_restore 3
 407              		.cfi_restore 4
 408              		.cfi_restore 5
 409              		.cfi_restore 14
 256:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_ValidateFlashData */
 410              		.loc 1 256 12 view .LVU100
 411              	.LBE6:
 242:Core/Src/code_storage.c ****     
 412              		.loc 1 242 16 view .LVU101
 413 0028 0020     		movs	r0, #0
 414              	.LVL37:
 258:Core/Src/code_storage.c **** 
 415              		.loc 1 258 1 view .LVU102
 416 002a 7047     		bx	lr
 417              	.LVL38:
 418              	.L38:
 419              	.LCFI10:
 420              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 15


 421              		.cfi_offset 3, -16
 422              		.cfi_offset 4, -12
 423              		.cfi_offset 5, -8
 424              		.cfi_offset 14, -4
 246:Core/Src/code_storage.c ****     
 425              		.loc 1 246 16 view .LVU103
 426 002c 0020     		movs	r0, #0
 427              	.LVL39:
 428              	.L34:
 258:Core/Src/code_storage.c **** 
 429              		.loc 1 258 1 view .LVU104
 430 002e 38BD     		pop	{r3, r4, r5, pc}
 431              	.LVL40:
 432              	.L39:
 433              	.LBB7:
 434              	.LBB5:
 253:Core/Src/code_storage.c ****     }
 435              		.loc 1 253 20 view .LVU105
 436 0030 0020     		movs	r0, #0
 437 0032 FCE7     		b	.L34
 438              	.L46:
 439              		.align	2
 440              	.L45:
 441 0034 78563412 		.word	305419896
 442              	.LBE5:
 443              	.LBE7:
 444              		.cfi_endproc
 445              	.LFE141:
 447              		.section	.text.CodeStorage_ReadCodes,"ax",%progbits
 448              		.align	1
 449              		.global	CodeStorage_ReadCodes
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 454              	CodeStorage_ReadCodes:
 455              	.LVL41:
 456              	.LFB135:
  91:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_ReadCodes */
 457              		.loc 1 91 1 is_stmt 1 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
  93:Core/Src/code_storage.c ****         return 1;
 461              		.loc 1 93 5 view .LVU107
  93:Core/Src/code_storage.c ****         return 1;
 462              		.loc 1 93 8 is_stmt 0 view .LVU108
 463 0000 58B1     		cbz	r0, .L49
  91:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_ReadCodes */
 464              		.loc 1 91 1 view .LVU109
 465 0002 10B5     		push	{r4, lr}
 466              	.LCFI11:
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 4, -8
 469              		.cfi_offset 14, -4
 470 0004 0446     		mov	r4, r0
  97:Core/Src/code_storage.c ****     
 471              		.loc 1 97 5 is_stmt 1 view .LVU110
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 16


 472 0006 6422     		movs	r2, #100
 473 0008 0649     		ldr	r1, .L55
 474 000a FFF7FEFF 		bl	memcpy
 475              	.LVL42:
 100:Core/Src/code_storage.c ****     {
 476              		.loc 1 100 5 view .LVU111
 100:Core/Src/code_storage.c ****     {
 477              		.loc 1 100 10 is_stmt 0 view .LVU112
 478 000e 2046     		mov	r0, r4
 479 0010 FFF7FEFF 		bl	CodeStorage_ValidateFlashData
 480              	.LVL43:
 100:Core/Src/code_storage.c ****     {
 481              		.loc 1 100 8 discriminator 1 view .LVU113
 482 0014 18B1     		cbz	r0, .L50
 105:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_ReadCodes */
 483              		.loc 1 105 12 view .LVU114
 484 0016 0020     		movs	r0, #0
 485              	.L48:
 107:Core/Src/code_storage.c **** 
 486              		.loc 1 107 1 view .LVU115
 487 0018 10BD     		pop	{r4, pc}
 488              	.LVL44:
 489              	.L49:
 490              	.LCFI12:
 491              		.cfi_def_cfa_offset 0
 492              		.cfi_restore 4
 493              		.cfi_restore 14
  94:Core/Src/code_storage.c ****     
 494              		.loc 1 94 16 view .LVU116
 495 001a 0120     		movs	r0, #1
 496              	.LVL45:
 107:Core/Src/code_storage.c **** 
 497              		.loc 1 107 1 view .LVU117
 498 001c 7047     		bx	lr
 499              	.LVL46:
 500              	.L50:
 501              	.LCFI13:
 502              		.cfi_def_cfa_offset 8
 503              		.cfi_offset 4, -8
 504              		.cfi_offset 14, -4
 102:Core/Src/code_storage.c ****     }
 505              		.loc 1 102 16 view .LVU118
 506 001e 0120     		movs	r0, #1
 507 0020 FAE7     		b	.L48
 508              	.L56:
 509 0022 00BF     		.align	2
 510              	.L55:
 511 0024 00000608 		.word	134610944
 512              		.cfi_endproc
 513              	.LFE135:
 515              		.section	.text.CodeStorage_Init,"ax",%progbits
 516              		.align	1
 517              		.global	CodeStorage_Init
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 522              	CodeStorage_Init:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 17


 523              	.LFB134:
  65:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_Init */
 524              		.loc 1 65 1 is_stmt 1 view -0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528 0000 10B5     		push	{r4, lr}
 529              	.LCFI14:
 530              		.cfi_def_cfa_offset 8
 531              		.cfi_offset 4, -8
 532              		.cfi_offset 14, -4
  68:Core/Src/code_storage.c ****     codes_loaded = 0;
 533              		.loc 1 68 5 view .LVU120
 534 0002 0C4C     		ldr	r4, .L61
 535 0004 6422     		movs	r2, #100
 536 0006 0021     		movs	r1, #0
 537 0008 2046     		mov	r0, r4
 538 000a FFF7FEFF 		bl	memset
 539              	.LVL47:
  69:Core/Src/code_storage.c ****     
 540              		.loc 1 69 5 view .LVU121
  69:Core/Src/code_storage.c ****     
 541              		.loc 1 69 18 is_stmt 0 view .LVU122
 542 000e 0A4B     		ldr	r3, .L61+4
 543 0010 0022     		movs	r2, #0
 544 0012 1A70     		strb	r2, [r3]
  72:Core/Src/code_storage.c ****     {
 545              		.loc 1 72 5 is_stmt 1 view .LVU123
  72:Core/Src/code_storage.c ****     {
 546              		.loc 1 72 9 is_stmt 0 view .LVU124
 547 0014 2046     		mov	r0, r4
 548 0016 FFF7FEFF 		bl	CodeStorage_ReadCodes
 549              	.LVL48:
  72:Core/Src/code_storage.c ****     {
 550              		.loc 1 72 8 discriminator 1 view .LVU125
 551 001a 18B9     		cbnz	r0, .L58
  74:Core/Src/code_storage.c ****     }
 552              		.loc 1 74 9 is_stmt 1 view .LVU126
  74:Core/Src/code_storage.c ****     }
 553              		.loc 1 74 22 is_stmt 0 view .LVU127
 554 001c 064B     		ldr	r3, .L61+4
 555 001e 0122     		movs	r2, #1
 556 0020 1A70     		strb	r2, [r3]
 557              	.L57:
  83:Core/Src/code_storage.c **** 
 558              		.loc 1 83 1 view .LVU128
 559 0022 10BD     		pop	{r4, pc}
 560              	.L58:
  79:Core/Src/code_storage.c ****         codes_loaded = 1;
 561              		.loc 1 79 9 is_stmt 1 view .LVU129
  79:Core/Src/code_storage.c ****         codes_loaded = 1;
 562              		.loc 1 79 36 is_stmt 0 view .LVU130
 563 0024 034B     		ldr	r3, .L61
 564 0026 054A     		ldr	r2, .L61+8
 565 0028 1A66     		str	r2, [r3, #96]
  80:Core/Src/code_storage.c ****     }
 566              		.loc 1 80 9 is_stmt 1 view .LVU131
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 18


  80:Core/Src/code_storage.c ****     }
 567              		.loc 1 80 22 is_stmt 0 view .LVU132
 568 002a 034B     		ldr	r3, .L61+4
 569 002c 0122     		movs	r2, #1
 570 002e 1A70     		strb	r2, [r3]
  83:Core/Src/code_storage.c **** 
 571              		.loc 1 83 1 view .LVU133
 572 0030 F7E7     		b	.L57
 573              	.L62:
 574 0032 00BF     		.align	2
 575              	.L61:
 576 0034 00000000 		.word	current_codes
 577 0038 00000000 		.word	codes_loaded
 578 003c 78563412 		.word	305419896
 579              		.cfi_endproc
 580              	.LFE134:
 582              		.section	.text.CodeStorage_WriteCodes,"ax",%progbits
 583              		.align	1
 584              		.global	CodeStorage_WriteCodes
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 589              	CodeStorage_WriteCodes:
 590              	.LVL49:
 591              	.LFB136:
 115:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_WriteCodes */
 592              		.loc 1 115 1 is_stmt 1 view -0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 115:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_WriteCodes */
 596              		.loc 1 115 1 is_stmt 0 view .LVU135
 597 0000 38B5     		push	{r3, r4, r5, lr}
 598              	.LCFI15:
 599              		.cfi_def_cfa_offset 16
 600              		.cfi_offset 3, -16
 601              		.cfi_offset 4, -12
 602              		.cfi_offset 5, -8
 603              		.cfi_offset 14, -4
 117:Core/Src/code_storage.c ****         return 1;
 604              		.loc 1 117 5 is_stmt 1 view .LVU136
 117:Core/Src/code_storage.c ****         return 1;
 605              		.loc 1 117 8 is_stmt 0 view .LVU137
 606 0002 C0B1     		cbz	r0, .L65
 607 0004 0446     		mov	r4, r0
 121:Core/Src/code_storage.c ****     {
 608              		.loc 1 121 5 is_stmt 1 view .LVU138
 121:Core/Src/code_storage.c ****     {
 609              		.loc 1 121 10 is_stmt 0 view .LVU139
 610 0006 FFF7FEFF 		bl	CodeStorage_ValidateFlashData
 611              	.LVL50:
 121:Core/Src/code_storage.c ****     {
 612              		.loc 1 121 8 discriminator 1 view .LVU140
 613 000a 10B9     		cbnz	r0, .L70
 123:Core/Src/code_storage.c ****     }
 614              		.loc 1 123 16 view .LVU141
 615 000c 0125     		movs	r5, #1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 19


 616              	.LVL51:
 617              	.L64:
 143:Core/Src/code_storage.c **** 
 618              		.loc 1 143 1 view .LVU142
 619 000e 2846     		mov	r0, r5
 620 0010 38BD     		pop	{r3, r4, r5, pc}
 621              	.LVL52:
 622              	.L70:
 127:Core/Src/code_storage.c ****     {
 623              		.loc 1 127 5 is_stmt 1 view .LVU143
 127:Core/Src/code_storage.c ****     {
 624              		.loc 1 127 9 is_stmt 0 view .LVU144
 625 0012 FFF7FEFF 		bl	CodeStorage_EraseSector
 626              	.LVL53:
 127:Core/Src/code_storage.c ****     {
 627              		.loc 1 127 8 discriminator 1 view .LVU145
 628 0016 08B1     		cbz	r0, .L71
 129:Core/Src/code_storage.c ****     }
 629              		.loc 1 129 16 view .LVU146
 630 0018 0125     		movs	r5, #1
 631 001a F8E7     		b	.L64
 632              	.L71:
 133:Core/Src/code_storage.c ****     {
 633              		.loc 1 133 5 is_stmt 1 view .LVU147
 133:Core/Src/code_storage.c ****     {
 634              		.loc 1 133 9 is_stmt 0 view .LVU148
 635 001c 2046     		mov	r0, r4
 636 001e FFF7FEFF 		bl	CodeStorage_ProgramFlash
 637              	.LVL54:
 133:Core/Src/code_storage.c ****     {
 638              		.loc 1 133 8 discriminator 1 view .LVU149
 639 0022 0546     		mov	r5, r0
 640 0024 08B1     		cbz	r0, .L72
 135:Core/Src/code_storage.c ****     }
 641              		.loc 1 135 16 view .LVU150
 642 0026 0125     		movs	r5, #1
 643 0028 F1E7     		b	.L64
 644              	.L72:
 139:Core/Src/code_storage.c ****     
 645              		.loc 1 139 5 is_stmt 1 view .LVU151
 646 002a 6422     		movs	r2, #100
 647 002c 2146     		mov	r1, r4
 648 002e 0348     		ldr	r0, .L73
 649 0030 FFF7FEFF 		bl	memcpy
 650              	.LVL55:
 141:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_WriteCodes */
 651              		.loc 1 141 5 view .LVU152
 141:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_WriteCodes */
 652              		.loc 1 141 12 is_stmt 0 view .LVU153
 653 0034 EBE7     		b	.L64
 654              	.LVL56:
 655              	.L65:
 118:Core/Src/code_storage.c ****     
 656              		.loc 1 118 16 view .LVU154
 657 0036 0125     		movs	r5, #1
 658 0038 E9E7     		b	.L64
 659              	.L74:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 20


 660 003a 00BF     		.align	2
 661              	.L73:
 662 003c 00000000 		.word	current_codes
 663              		.cfi_endproc
 664              	.LFE136:
 666              		.section	.text.CodeStorage_SetCode,"ax",%progbits
 667              		.align	1
 668              		.global	CodeStorage_SetCode
 669              		.syntax unified
 670              		.thumb
 671              		.thumb_func
 673              	CodeStorage_SetCode:
 674              	.LVL57:
 675              	.LFB138:
 175:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_SetCode */
 676              		.loc 1 175 1 is_stmt 1 view -0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 177:Core/Src/code_storage.c ****         return 1;
 680              		.loc 1 177 5 view .LVU156
 177:Core/Src/code_storage.c ****         return 1;
 681              		.loc 1 177 8 is_stmt 0 view .LVU157
 682 0000 0228     		cmp	r0, #2
 683 0002 1FD8     		bhi	.L77
 175:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_SetCode */
 684              		.loc 1 175 1 view .LVU158
 685 0004 70B5     		push	{r4, r5, r6, lr}
 686              	.LCFI16:
 687              		.cfi_def_cfa_offset 16
 688              		.cfi_offset 4, -16
 689              		.cfi_offset 5, -12
 690              		.cfi_offset 6, -8
 691              		.cfi_offset 14, -4
 692 0006 0446     		mov	r4, r0
 693 0008 0D46     		mov	r5, r1
 177:Core/Src/code_storage.c ****         return 1;
 694              		.loc 1 177 24 discriminator 1 view .LVU159
 695 000a E9B1     		cbz	r1, .L78
 180:Core/Src/code_storage.c ****         return 1;
 696              		.loc 1 180 5 is_stmt 1 view .LVU160
 180:Core/Src/code_storage.c ****         return 1;
 697              		.loc 1 180 9 is_stmt 0 view .LVU161
 698 000c 104B     		ldr	r3, .L87
 699 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 180:Core/Src/code_storage.c ****         return 1;
 700              		.loc 1 180 8 view .LVU162
 701 0010 E3B1     		cbz	r3, .L79
 184:Core/Src/code_storage.c ****         return 1;
 702              		.loc 1 184 5 is_stmt 1 view .LVU163
 184:Core/Src/code_storage.c ****         return 1;
 703              		.loc 1 184 9 is_stmt 0 view .LVU164
 704 0012 0846     		mov	r0, r1
 705              	.LVL58:
 184:Core/Src/code_storage.c ****         return 1;
 706              		.loc 1 184 9 view .LVU165
 707 0014 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 21


 708              	.LVL59:
 184:Core/Src/code_storage.c ****         return 1;
 709              		.loc 1 184 8 discriminator 1 view .LVU166
 710 0018 1F28     		cmp	r0, #31
 711 001a 01D9     		bls	.L86
 185:Core/Src/code_storage.c ****     
 712              		.loc 1 185 16 view .LVU167
 713 001c 0120     		movs	r0, #1
 714 001e 16E0     		b	.L76
 715              	.L86:
 188:Core/Src/code_storage.c ****     current_codes.code1[codeIndex * 32 + MAX_CODE_LENGTH - 1] = '\0';
 716              		.loc 1 188 5 is_stmt 1 view .LVU168
 717 0020 0C4E     		ldr	r6, .L87+4
 718 0022 1F22     		movs	r2, #31
 719 0024 2946     		mov	r1, r5
 720 0026 06EB4410 		add	r0, r6, r4, lsl #5
 721 002a FFF7FEFF 		bl	strncpy
 722              	.LVL60:
 189:Core/Src/code_storage.c ****     
 723              		.loc 1 189 5 view .LVU169
 189:Core/Src/code_storage.c ****     
 724              		.loc 1 189 40 is_stmt 0 view .LVU170
 725 002e 0134     		adds	r4, r4, #1
 726              	.LVL61:
 189:Core/Src/code_storage.c ****     
 727              		.loc 1 189 40 view .LVU171
 728 0030 6401     		lsls	r4, r4, #5
 729              	.LVL62:
 189:Core/Src/code_storage.c ****     
 730              		.loc 1 189 58 view .LVU172
 731 0032 013C     		subs	r4, r4, #1
 189:Core/Src/code_storage.c ****     
 732              		.loc 1 189 63 view .LVU173
 733 0034 0023     		movs	r3, #0
 734 0036 3355     		strb	r3, [r6, r4]
 192:Core/Src/code_storage.c ****     {
 735              		.loc 1 192 5 is_stmt 1 view .LVU174
 192:Core/Src/code_storage.c ****     {
 736              		.loc 1 192 9 is_stmt 0 view .LVU175
 737 0038 3046     		mov	r0, r6
 738 003a FFF7FEFF 		bl	CodeStorage_WriteCodes
 739              	.LVL63:
 192:Core/Src/code_storage.c ****     {
 740              		.loc 1 192 8 discriminator 1 view .LVU176
 741 003e 30B1     		cbz	r0, .L76
 194:Core/Src/code_storage.c ****     }
 742              		.loc 1 194 16 view .LVU177
 743 0040 0120     		movs	r0, #1
 744 0042 04E0     		b	.L76
 745              	.LVL64:
 746              	.L77:
 747              	.LCFI17:
 748              		.cfi_def_cfa_offset 0
 749              		.cfi_restore 4
 750              		.cfi_restore 5
 751              		.cfi_restore 6
 752              		.cfi_restore 14
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 22


 178:Core/Src/code_storage.c ****     
 753              		.loc 1 178 16 view .LVU178
 754 0044 0120     		movs	r0, #1
 755              	.LVL65:
 199:Core/Src/code_storage.c **** 
 756              		.loc 1 199 1 view .LVU179
 757 0046 7047     		bx	lr
 758              	.LVL66:
 759              	.L78:
 760              	.LCFI18:
 761              		.cfi_def_cfa_offset 16
 762              		.cfi_offset 4, -16
 763              		.cfi_offset 5, -12
 764              		.cfi_offset 6, -8
 765              		.cfi_offset 14, -4
 178:Core/Src/code_storage.c ****     
 766              		.loc 1 178 16 view .LVU180
 767 0048 0120     		movs	r0, #1
 768              	.LVL67:
 178:Core/Src/code_storage.c ****     
 769              		.loc 1 178 16 view .LVU181
 770 004a 00E0     		b	.L76
 771              	.LVL68:
 772              	.L79:
 181:Core/Src/code_storage.c ****     
 773              		.loc 1 181 16 view .LVU182
 774 004c 0120     		movs	r0, #1
 775              	.LVL69:
 776              	.L76:
 199:Core/Src/code_storage.c **** 
 777              		.loc 1 199 1 view .LVU183
 778 004e 70BD     		pop	{r4, r5, r6, pc}
 779              	.LVL70:
 780              	.L88:
 199:Core/Src/code_storage.c **** 
 781              		.loc 1 199 1 view .LVU184
 782              		.align	2
 783              	.L87:
 784 0050 00000000 		.word	codes_loaded
 785 0054 00000000 		.word	current_codes
 786              		.cfi_endproc
 787              	.LFE138:
 789              		.section	.text.CodeStorage_ClearAllCodes,"ax",%progbits
 790              		.align	1
 791              		.global	CodeStorage_ClearAllCodes
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 796              	CodeStorage_ClearAllCodes:
 797              	.LFB140:
 222:Core/Src/code_storage.c ****     /* USER CODE BEGIN CodeStorage_ClearAllCodes */
 798              		.loc 1 222 1 is_stmt 1 view -0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802 0000 10B5     		push	{r4, lr}
 803              	.LCFI19:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 23


 804              		.cfi_def_cfa_offset 8
 805              		.cfi_offset 4, -8
 806              		.cfi_offset 14, -4
 225:Core/Src/code_storage.c ****     current_codes.magic_number = MAGIC_NUMBER;
 807              		.loc 1 225 5 view .LVU186
 808 0002 064C     		ldr	r4, .L91
 809 0004 6422     		movs	r2, #100
 810 0006 0021     		movs	r1, #0
 811 0008 2046     		mov	r0, r4
 812 000a FFF7FEFF 		bl	memset
 813              	.LVL71:
 226:Core/Src/code_storage.c ****     
 814              		.loc 1 226 5 view .LVU187
 226:Core/Src/code_storage.c ****     
 815              		.loc 1 226 32 is_stmt 0 view .LVU188
 816 000e 044B     		ldr	r3, .L91+4
 817 0010 2366     		str	r3, [r4, #96]
 229:Core/Src/code_storage.c ****     /* USER CODE END CodeStorage_ClearAllCodes */
 818              		.loc 1 229 5 is_stmt 1 view .LVU189
 819 0012 2046     		mov	r0, r4
 820 0014 FFF7FEFF 		bl	CodeStorage_WriteCodes
 821              	.LVL72:
 231:Core/Src/code_storage.c **** 
 822              		.loc 1 231 1 is_stmt 0 view .LVU190
 823 0018 10BD     		pop	{r4, pc}
 824              	.L92:
 825 001a 00BF     		.align	2
 826              	.L91:
 827 001c 00000000 		.word	current_codes
 828 0020 78563412 		.word	305419896
 829              		.cfi_endproc
 830              	.LFE140:
 832              		.section	.bss.codes_loaded,"aw",%nobits
 835              	codes_loaded:
 836 0000 00       		.space	1
 837              		.section	.bss.current_codes,"aw",%nobits
 838              		.align	2
 841              	current_codes:
 842 0000 00000000 		.space	100
 842      00000000 
 842      00000000 
 842      00000000 
 842      00000000 
 843              		.text
 844              	.Letext0:
 845              		.file 2 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 846              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 847              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 848              		.file 5 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 849              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 850              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ex.h"
 851              		.file 8 "Core/Inc/code_storage.h"
 852              		.file 9 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 853              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash.h"
 854              		.file 11 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccNz3oze.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 code_storage.c
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:21     .text.CodeStorage_EraseSector:00000000 $t
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:26     .text.CodeStorage_EraseSector:00000000 CodeStorage_EraseSector
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:102    .text.CodeStorage_EraseSector:00000040 $d
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:107    .text.CodeStorage_ProgramFlash:00000000 $t
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:112    .text.CodeStorage_ProgramFlash:00000000 CodeStorage_ProgramFlash
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:188    .text.CodeStorage_GetCode:00000000 $t
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:194    .text.CodeStorage_GetCode:00000000 CodeStorage_GetCode
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:271    .text.CodeStorage_GetCode:00000030 $d
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:835    .bss.codes_loaded:00000000 codes_loaded
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:841    .bss.current_codes:00000000 current_codes
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:277    .text.CodeStorage_IsCodeSet:00000000 $t
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:283    .text.CodeStorage_IsCodeSet:00000000 CodeStorage_IsCodeSet
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:329    .text.CodeStorage_IsCodeSet:00000020 $d
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:335    .text.CodeStorage_ValidateFlashData:00000000 $t
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:341    .text.CodeStorage_ValidateFlashData:00000000 CodeStorage_ValidateFlashData
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:441    .text.CodeStorage_ValidateFlashData:00000034 $d
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:448    .text.CodeStorage_ReadCodes:00000000 $t
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:454    .text.CodeStorage_ReadCodes:00000000 CodeStorage_ReadCodes
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:511    .text.CodeStorage_ReadCodes:00000024 $d
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:516    .text.CodeStorage_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:522    .text.CodeStorage_Init:00000000 CodeStorage_Init
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:576    .text.CodeStorage_Init:00000034 $d
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:583    .text.CodeStorage_WriteCodes:00000000 $t
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:589    .text.CodeStorage_WriteCodes:00000000 CodeStorage_WriteCodes
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:662    .text.CodeStorage_WriteCodes:0000003c $d
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:667    .text.CodeStorage_SetCode:00000000 $t
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:673    .text.CodeStorage_SetCode:00000000 CodeStorage_SetCode
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:784    .text.CodeStorage_SetCode:00000050 $d
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:790    .text.CodeStorage_ClearAllCodes:00000000 $t
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:796    .text.CodeStorage_ClearAllCodes:00000000 CodeStorage_ClearAllCodes
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:827    .text.CodeStorage_ClearAllCodes:0000001c $d
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:836    .bss.codes_loaded:00000000 $d
C:\Users\User\AppData\Local\Temp\ccNz3oze.s:838    .bss.current_codes:00000000 $d

UNDEFINED SYMBOLS
HAL_FLASH_Unlock
HAL_FLASHEx_Erase
HAL_FLASH_Lock
HAL_FLASH_Program
strncpy
strlen
memcpy
memset
